{"componentChunkName":"component---node-modules-gatsby-theme-chronoblog-src-templates-post-js","path":"/code-category-theory-in-clojure-provo-meetup/","result":{"data":{"mdx":{"id":"a9708802-3291-514a-8c12-f2b56e740925","excerpt":"This evening I attended a virtual meetup for the Clojure-Provo titled,\n\"Category Theory in Clojure- installment 1\" given by Brian Abbott.  Aâ€¦","frontmatter":{"title":"Category Theory in Clojure, Clojure-Provo Meetup Notes","date":"2020-07-31T00:00:00.000Z","description":null,"tags":["post","coding","clojure","category theory"],"cover":null},"fields":{"slug":"/code-category-theory-in-clojure-provo-meetup/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Category Theory in Clojure, Clojure-Provo Meetup Notes\",\n  \"date\": \"2020-07-31T00:00:00.000Z\",\n  \"tags\": [\"post\", \"coding\", \"clojure\", \"category theory\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This evening I attended a virtual meetup for the Clojure-Provo titled,\\n\\\"Category Theory in Clojure- installment 1\\\" given by Brian Abbott. \"), mdx(\"p\", null, \"A few of my coworkers had been following along with\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.youtube.com/playlist?list=PLhgq-BqyZ7i7MTGhUROZy3BOICnVixETS\"\n  }, \"MIT's Programming with Categories\"), \"\\ncourse earlier this year during our open source time. Because of that, I wanted to attended\\nthis meetup and report back any interesting links or thoughts. Here are some of my notes\\nfrom attending the meetup for future reference:\"), mdx(\"p\", null, \"Category theory is an abstractions of abstractions. Abbott referred to it multiple times as\\n\\\"an assembly language of mathematics.\\\" A category is a labelled, directed graph with nodes and\\nmorphisms (seen often as arrows in an operation).\"), mdx(\"p\", null, \"He shared a \\\"History of Category Theory\\\" timeline (\\\"history is a morphism with from and to\\\")\\nstarting with David Hilbert in 1890 and continuing to the mid-20th century. He highlighted\\nSaunders MacLane and Samuel Eilenberg's work in 1942 as the birth of category theory as we know it.\\nWhen I skimmed the list, I noticed at least one woman's name: Emmy Noether. I'll have to look her up\\nlater.\"), mdx(\"p\", null, \"Abbott listed a few synonyms for category theory that may make it easier to search for papers: topos\\ntheory, topoid theoyr, sheaf theory, algebraic topology. \"), mdx(\"p\", null, \"As a resource for papers, presentations, libraries, etc., about category theory and functional discipline,\\nAbbott recommended Clojure-Provo's repo,\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/clojure-provo/functional-discipline-content-cats\"\n  }, \"functional-discipline-content-cats\")), mdx(\"p\", null, \"Dragon Djuric's work was highlighted as examples of category theory in clojure. Fluo Kitten is a category\\nimplmentation on clojure.\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/uncomplicate/fluokitten\"\n  }, \"Fluo Kitten on Github\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://fluokitten.uncomplicate.org/codox/\"\n  }, \"Fluo Kitten's documentation\")), mdx(\"p\", null, \"Neanderthal is a Clojure library that uses Fluo Kitten to do linear algebra and matrix computations.\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/uncomplicate/neanderthal\"\n  }, \"Neanderthal on Github\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://neanderthal.uncomplicate.org/\"\n  }, \"Neanderthal's documentation\")), mdx(\"p\", null, \"\\\"Category thoery ends up being a set of adjunct functor operations\\\"\"), mdx(\"p\", null, \"There was also a mention of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/funcool/cats\"\n  }, \"funcool's cats\"), \" which is also a library for\\nusing category theory in Clojure.\"), mdx(\"p\", null, \"Fluo Kitten's implementation of category theory uses Haskell-style left assocation binding.\"), mdx(\"p\", null, \"Also mentioned was \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.wolframphysics.org/\"\n  }, \"Stephen Wolfram's Physics Project\"), \" which describes physics using hypergraphs.\"), mdx(\"p\", null, \"At the end of the meeting, there was some discussion of what people would like in the future from these meetups.\\nIt seems many people are interested in intermediate examples of category theory in the practice of Clojure.\\nThere are many \\\"simple\\\" examples and many more complicated examples, but where would you reach for\\ncategory theory when you are doing your every day programming?\"), mdx(\"p\", null, \"\\\"What category theory allows you to do is what higher level functions allow you to do, but on steroids\\\"\"), mdx(\"p\", null, \"Abbott also voiced the concern that category theory is too bound to Haskell and that the community needs to\\nget away from equating category theory in programming with Haskell and perhaps these meetups can\\nbring Clojure into category theory more.\"), mdx(\"p\", null, \"Personal thoughts: every time I venture into category theory I think about how I missed this in my BS degree.\\nI understood mathematics was growing, but I didn't see where it was growing- topology and algebra were presented\\nin history and not as something growing. I ended up doing research in number theory. My roommmate Melissa did\\nreserach in topology and I wonder if I had chosen a different discipline, I would have run into category theory\\nsooner. Oh well, I can learn it now.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"a9708802-3291-514a-8c12-f2b56e740925"}},"staticQueryHashes":["1961101537","2542493696"]}