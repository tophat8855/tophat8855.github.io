{"componentChunkName":"component---node-modules-gatsby-theme-chronoblog-src-templates-link-js","path":"/links/bringing-clojure-to-the-desktop/","result":{"data":{"mdx":{"id":"b9c0488f-221b-5e4b-ba63-0d1c26cba663","excerpt":"I walked through Aphyr's Clojure from the Ground Up chapter on polymorphism today while following along in my repl\nand it was really good toâ€¦","frontmatter":{"title":"Clojure from the Ground Up: Polymorphism","date":"2020-10-30T00:00:00.000Z","link":"https://aphyr.com/posts/352-clojure-from-the-ground-up-polymorphism","tags":["coding","clojure","link"],"cover":null},"fields":{"slug":"/links/bringing-clojure-to-the-desktop/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Clojure from the Ground Up: Polymorphism\",\n  \"date\": \"2020-10-30T00:00:00.000Z\",\n  \"link\": \"https://aphyr.com/posts/352-clojure-from-the-ground-up-polymorphism\",\n  \"tags\": [\"coding\", \"clojure\", \"link\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I walked through Aphyr's Clojure from the Ground Up chapter on polymorphism today while following along in my repl\\nand it was really good to see the how defmulti/defmethod, definterface, defrecord work similarly and differently.\"), mdx(\"p\", null, \"If you are looking for a good post about Clojure and polymorphism, this is probably the best.\"), mdx(\"p\", null, \"I would like to do the problem set at the bottom of the chapter tomorrow.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"b9c0488f-221b-5e4b-ba63-0d1c26cba663"}},"staticQueryHashes":["1961101537","2542493696"]}