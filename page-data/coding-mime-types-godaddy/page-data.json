{"componentChunkName":"component---node-modules-gatsby-theme-chronoblog-src-templates-post-js","path":"/coding-mime-types-godaddy/","result":{"data":{"mdx":{"id":"7cd8719d-cb00-595a-bbbf-a237a244940a","excerpt":"In my outside-of-work time, I help maintain a website for a non-profit. For a while it had been a Wordpress app,\nbut even with followingâ€¦","frontmatter":{"title":"MIME Types and GoDaddy","date":"2020-08-28T00:00:00.000Z","description":"The little trick to get GoDaddy to serve json files.","tags":["post","coding"],"cover":null},"fields":{"slug":"/coding-mime-types-godaddy/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"MIME Types and GoDaddy\",\n  \"date\": \"2020-08-28T00:00:00.000Z\",\n  \"description\": \"The little trick to get GoDaddy to serve json files.\",\n  \"tags\": [\"post\", \"coding\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"In my outside-of-work time, I help maintain a website for a non-profit. For a while it had been a Wordpress app,\\nbut even with following small, regular updates of Wordpress, it no longer updated easily so I switched it to a\\nGatsbyJS site like this one. They only need a few pages so it didn't need the bulkiness of Wordpress.\"), mdx(\"p\", null, \"When I went to put it on their servers, it mostly worked, except that some of the transitions like opening menu\\nitems didn't work. When I investigated that, it seemed that it wasn't able to find certain \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".json\"), \" files. It turns out\\nthat the Windows hosting on GoDaddy blocks \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".json\"), \" files from being served unless you are specific about accepting them\\nin the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"web.config\"), \" file. Store it at the root directory. It'll look something like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"<configuration>\\n    <system.webServer>\\n        <staticContent>\\n            <mimeMap fileExtension=\\\".json\\\" mimeType=\\\"text/json\\\" />\\n        </staticContent>\\n    </system.webServer>\\n</configuration>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"7cd8719d-cb00-595a-bbbf-a237a244940a"}},"staticQueryHashes":["1961101537","2542493696"]}